{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moarw\\\\OneDrive\\\\M2L\\\\maison-des-ligues\\\\src\\\\components\\\\Admin\\\\Modif_Admin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../../styles/Modif_Admin.css';\nimport bcrypt from 'bcryptjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modif_Admin = () => {\n  _s();\n  const [administrateurs, setAdministrateurs] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newEmail, setNewEmail] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  useEffect(() => {\n    fetch(\"http://localhost:3000/api/usersroute/administrateurs\").then(response => response.json()).then(data => setAdministrateurs(data)).catch(error => console.error(error));\n  }, []);\n  const handleModification = async uid => {\n    try {\n      // Cryptez le nouveau mot de passe avec bcryptjs\n      const hashedPassword = await bcrypt.hash(newPassword, 10);\n      const response = await fetch('http://localhost:3000/api/usersroute/modifieradmin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          uid,\n          newName,\n          newEmail,\n          newPassword: hashedPassword // Envoyez le mot de passe crypté\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data);\n        // Mettez à jour la liste des administrateurs après la modification réussie\n        setAdministrateurs(admins => admins.map(admin => admin.uid === uid ? {\n          ...admin,\n          name: newName,\n          email: newEmail\n        } : admin));\n        // Réinitialisez les champs de saisie après la modification réussie\n        setNewName('');\n        setNewEmail('');\n        setNewPassword('');\n      } else {\n        console.error('Erreur lors de la modification de l\\'administrateur :', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la modification de l\\'administrateur :', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"modify-admins\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Modification des administrateurs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: administrateurs.map(admin => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: admin.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", admin.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"name\",\n            type: \"text\",\n            placeholder: \"Nouveau Nom\"\n            // value={newName}\n            ,\n            onChange: e => setNewName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"email\",\n            type: \"text\",\n            placeholder: \"Nouvel Email\"\n            // value={newEmail}\n            ,\n            onChange: e => setNewEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"password\",\n            type: \"password\",\n            placeholder: \"Nouveau Mot de Passe\"\n            // value={newPassword}\n            ,\n            onChange: e => setNewPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleModification(admin.uid),\n            children: \"Modifier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, admin.uid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(Modif_Admin, \"7WvSPrvoL0ugzzYjeSxp80JmzHM=\");\n_c = Modif_Admin;\nexport default Modif_Admin;\nvar _c;\n$RefreshReg$(_c, \"Modif_Admin\");","map":{"version":3,"names":["React","useState","useEffect","bcrypt","jsxDEV","_jsxDEV","Modif_Admin","_s","administrateurs","setAdministrateurs","newName","setNewName","newEmail","setNewEmail","newPassword","setNewPassword","fetch","then","response","json","data","catch","error","console","handleModification","uid","hashedPassword","hash","method","headers","body","JSON","stringify","ok","log","admins","map","admin","name","email","statusText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/moarw/OneDrive/M2L/maison-des-ligues/src/components/Admin/Modif_Admin.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../../styles/Modif_Admin.css';\nimport bcrypt from 'bcryptjs';\n\nconst Modif_Admin = () => {\n    const [administrateurs, setAdministrateurs] = useState([]);\n    const [newName, setNewName] = useState('');\n    const [newEmail, setNewEmail] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n\n    useEffect(() => {\n        fetch(\"http://localhost:3000/api/usersroute/administrateurs\")\n            .then((response) => response.json())\n            .then((data) => setAdministrateurs(data))\n            .catch((error) => console.error(error));\n    }, []);\n\n    const handleModification = async (uid) => {\n        try {\n            // Cryptez le nouveau mot de passe avec bcryptjs\n            const hashedPassword = await bcrypt.hash(newPassword, 10);\n\n            const response = await fetch('http://localhost:3000/api/usersroute/modifieradmin', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    uid,\n                    newName,\n                    newEmail,\n                    newPassword: hashedPassword,  // Envoyez le mot de passe crypté\n                }),\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                console.log(data);\n                // Mettez à jour la liste des administrateurs après la modification réussie\n                setAdministrateurs((admins) =>\n                    admins.map((admin) =>\n                        admin.uid === uid\n                            ? { ...admin, name: newName, email: newEmail }\n                            : admin\n                    )\n                );\n                // Réinitialisez les champs de saisie après la modification réussie\n                setNewName('');\n                setNewEmail('');\n                setNewPassword('');\n            } else {\n                console.error('Erreur lors de la modification de l\\'administrateur :', response.statusText);\n            }\n        } catch (error) {\n            console.error('Erreur lors de la modification de l\\'administrateur :', error);\n        }\n    };\n\n    return (\n        <section className=\"modify-admins\">\n            <h1>Modification des administrateurs</h1>\n\n            <div>\n                {administrateurs.map((admin) => (\n                    <div key={admin.uid} className=\"admin-box\">\n                        <h2>{admin.name}</h2>\n                        <p>Email: {admin.email}</p>\n                        <div>\n                            <input\n                                name='name'\n                                type=\"text\"\n                                placeholder=\"Nouveau Nom\"\n                                // value={newName}\n                                onChange={(e) => setNewName(e.target.value)}\n                            />\n                            <input\n                                name='email'\n                                type=\"text\"\n                                placeholder=\"Nouvel Email\"\n                                // value={newEmail}\n                                onChange={(e) => setNewEmail(e.target.value)}\n                            />\n                            <input\n                                name='password'\n                                type=\"password\"\n                                placeholder=\"Nouveau Mot de Passe\"\n                                // value={newPassword}\n                                onChange={(e) => setNewPassword(e.target.value)}\n                            />\n                            <button onClick={() => handleModification(admin.uid)}>\n                                Modifier\n                            </button>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </section>\n    );\n};\n\nexport default Modif_Admin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}