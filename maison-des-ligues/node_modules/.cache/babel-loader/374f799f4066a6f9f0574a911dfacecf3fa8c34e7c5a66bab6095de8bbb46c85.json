{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moarw\\\\OneDrive\\\\M2L\\\\maison-des-ligues\\\\src\\\\components\\\\connexion.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { jwtDecode } from 'jwt-decode';\nimport '../styles/connexion.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Connexion = () => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState(null);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleTokenUpdate = token => {\n    const decodedToken = jwtDecode(token);\n    console.log('Decoded Token:', decodedToken); // Vérifiez les informations du token décodé\n    if (decodedToken.isAdmin) {\n      navigate('/admin/dashboard');\n      window.location.reload();\n    } else {\n      navigate('/acceuil');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3000/api/usersroute/connexion', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        const {\n          token\n        } = await response.json();\n\n        // Créez le cookie token\n        Cookies.set('token', token);\n        window.dispatchEvent(new Event('tokenUpdated')); // Émettre un événement\n        handleTokenUpdate(token);\n      } else {\n        const errorData = await response.json();\n        setError(errorData.error);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la soumission du formulaire :', error);\n      setError('Erreur réseau lors de la connexion.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: formData.email,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Mot de passe:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: formData.password,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Se connecter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(Connexion, \"5iCENjk+P7WefLtBSS1XOogg6uo=\", false, function () {\n  return [useNavigate];\n});\n_c = Connexion;\nexport default Connexion;\nvar _c;\n$RefreshReg$(_c, \"Connexion\");","map":{"version":3,"names":["React","useState","useNavigate","Cookies","jwtDecode","jsxDEV","_jsxDEV","Connexion","_s","navigate","formData","setFormData","email","password","error","setError","handleChange","e","target","name","value","handleTokenUpdate","token","decodedToken","console","log","isAdmin","window","location","reload","handleSubmit","preventDefault","response","fetch","method","headers","credentials","body","JSON","stringify","ok","json","set","dispatchEvent","Event","errorData","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","required","style","color","_c","$RefreshReg$"],"sources":["C:/Users/moarw/OneDrive/M2L/maison-des-ligues/src/components/connexion.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { jwtDecode } from 'jwt-decode';\nimport '../styles/connexion.css';\nconst Connexion = () => {\n    const navigate = useNavigate();\n\n\n    const [formData, setFormData] = useState({\n        email: '',\n        password: '',\n    });\n    const [error, setError] = useState(null);\n\n    const handleChange = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    };\n\n    const handleTokenUpdate = (token) => {\n        const decodedToken = jwtDecode(token);\n        console.log('Decoded Token:', decodedToken); // Vérifiez les informations du token décodé\n        if (decodedToken.isAdmin) {\n            navigate('/admin/dashboard');\n            window.location.reload();\n        } else {\n            navigate('/acceuil');\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            const response = await fetch('http://localhost:3000/api/usersroute/connexion', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                credentials: 'include',\n                body: JSON.stringify(formData),\n            });\n\n            if (response.ok) {\n                const { token } = await response.json();\n\n                // Créez le cookie token\n                Cookies.set('token', token);\n\n\n\n                window.dispatchEvent(new Event('tokenUpdated')); // Émettre un événement\n                handleTokenUpdate(token);\n            } else {\n                const errorData = await response.json();\n                setError(errorData.error);\n            }\n        } catch (error) {\n            console.error('Erreur lors de la soumission du formulaire :', error);\n            setError('Erreur réseau lors de la connexion.');\n        }\n    };\n    \n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label>Email:</label>\n            <input\n                type=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n                required\n            />\n\n            <label>Mot de passe:</label>\n            <input\n                type=\"password\"\n                name=\"password\"\n                value={formData.password}\n                onChange={handleChange}\n                required\n            />\n\n            <button type=\"submit\">Se connecter</button>\n\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n        </form>\n    );\n};\n\nexport default Connexion;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}